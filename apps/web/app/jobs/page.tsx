'use client'

import { useState, useMemo, useEffect } from 'react'
import Link from 'next/link'
import { mockJobs } from '../../lib/mock-data'
import { JobCard } from './components/job-card'
import { JobFilters, type JobFilters as JobFiltersType } from './components/job-filters'
import { Button } from '../../components/button'
import { Card, CardBody } from '../../components/card'

export default function JobsPage() {
  // Simple auth flag check ‚Äî this project currently doesn't have a central auth context.
  // We'll use a lightweight client-side check (localStorage key `isLoggedIn`) to gate access.
  // TODO: replace with real auth context/session when available.
  const [isAuthChecked, setIsAuthChecked] = useState(false)
  const [isLoggedIn, setIsLoggedIn] = useState(false)

  useEffect(() => {
    try {
      const v = localStorage.getItem('isLoggedIn')
      setIsLoggedIn(v === 'true')
    } catch (e) {
      setIsLoggedIn(false)
    }
    setIsAuthChecked(true)
  }, [])

  const [filters, setFilters] = useState<JobFiltersType>({
    search: '',
    location: '',
    type: '',
    experienceLevel: '',
    department: ''
  })

  const filteredJobs = useMemo(() => {
    return mockJobs.filter(job => {
      const matchesSearch = !filters.search || 
        job.title.toLowerCase().includes(filters.search.toLowerCase()) ||
        job.company.toLowerCase().includes(filters.search.toLowerCase()) ||
        job.description.toLowerCase().includes(filters.search.toLowerCase())

      const matchesLocation = !filters.location || job.location.includes(filters.location)
      const matchesType = !filters.type || job.type === filters.type
      const matchesExperience = !filters.experienceLevel || job.experienceLevel === filters.experienceLevel
      const matchesDepartment = !filters.department || job.department === filters.department

      return matchesSearch && matchesLocation && matchesType && matchesExperience && matchesDepartment && job.isActive
    })
  }, [filters])

  const activeJobsCount = mockJobs.filter(job => job.isActive).length

  // While we check auth, render nothing (hydration safe)
  if (!isAuthChecked) return null

  // If not logged in, show login CTA instead of job list
  if (!isLoggedIn) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="max-w-md w-full px-4">
          <Card>
            <CardBody className="text-center py-12">
              <div className="text-6xl mb-4">üîí</div>
              <h3 className="text-xl font-semibold text-gray-700 mb-2">‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏á‡∏≤‡∏ô</h3>
              <p className="text-gray-500 mb-6">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡πà‡∏≤‡∏ô LINE ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô</p>
              <div className="flex justify-center">
                <Link href="/auth/login">
                  <Button variant="line">‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</Button>
                </Link>
              </div>
            </CardBody>
          </Card>
        </div>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <div className="bg-white border-b border-gray-200">
        <div className="container mx-auto px-4 py-6">
          <div className="flex items-center justify-between">
            <div>
              <Link href="/" className="text-2xl font-bold text-green-600 flex items-center space-x-2">
                <span>üß©</span>
                <span>Jobs SCC</span>
              </Link>
            </div>
            <div className="hidden md:flex items-center space-x-6">
              <Link href="/" className="text-gray-600 hover:text-gray-900">
                ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å
              </Link>
              <Link href="/about" className="text-gray-600 hover:text-gray-900">
                ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏≤
              </Link>
              <Button variant="line" size="sm">
                ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
              </Button>
            </div>
          </div>
        </div>
      </div>

      <div className="container mx-auto px-4 py-8">
        {/* Page Title */}
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-900 mb-4">
            üîç ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
          </h1>
          <div className="flex items-center justify-between">
            <p className="text-gray-600">
              ‡∏û‡∏ö <span className="font-semibold text-green-600">{filteredJobs.length}</span> ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏á‡∏≤‡∏ô
              ‡∏à‡∏≤‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {activeJobsCount} ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
            </p>
            <div className="hidden md:flex items-center space-x-2 text-sm text-gray-500">
              <span>‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°:</span>
              <select className="border border-gray-300 rounded px-2 py-1 text-sm">
                <option>‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</option>
                <option>‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î</option>
                <option>‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ï‡πà‡∏≥‡∏™‡∏∏‡∏î</option>
                <option>‡∏ß‡∏±‡∏ô‡∏õ‡∏¥‡∏î‡∏£‡∏±‡∏ö‡πÉ‡∏Å‡∏•‡πâ‡∏™‡∏∏‡∏î</option>
              </select>
            </div>
          </div>
        </div>

        {/* Filters */}
        <JobFilters onFilterChange={setFilters} />

        {/* Results */}
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {/* Job List */}
          <div className="lg:col-span-2">
            {filteredJobs.length > 0 ? (
              <div className="space-y-6">
                {filteredJobs.map(job => (
                  <JobCard key={job.id} job={job} />
                ))}
              </div>
            ) : (
              <Card>
                <CardBody className="text-center py-12">
                  <div className="text-gray-400 text-6xl mb-4">üîç</div>
                  <h3 className="text-xl font-semibold text-gray-700 mb-2">
                    ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç
                  </h3>
                  <p className="text-gray-500 mb-6">
                    ‡∏•‡∏≠‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
                  </p>
                  <Button 
                    variant="outline" 
                    onClick={() => setFilters({
                      search: '',
                      location: '',
                      type: '',
                      experienceLevel: '',
                      department: ''
                    })}
                  >
                    ‡∏•‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                  </Button>
                </CardBody>
              </Card>
            )}
          </div>

          {/* Sidebar */}
          <div className="lg:col-span-1">
            <div className="space-y-6">
              {/* Quick Stats */}
              <Card>
                <CardBody className="p-6">
                  <h3 className="font-semibold text-gray-900 mb-4">üìä ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏á‡∏≤‡∏ô</h3>
                  <div className="space-y-3">
                    <div className="flex justify-between items-center">
                      <span className="text-gray-600">‡∏á‡∏≤‡∏ô‡πÄ‡∏ï‡πá‡∏°‡πÄ‡∏ß‡∏•‡∏≤</span>
                      <span className="font-semibold text-green-600">
                        {mockJobs.filter(job => job.type === 'full-time').length}
                      </span>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-gray-600">‡∏á‡∏≤‡∏ô‡∏Ñ‡∏£‡∏∂‡πà‡∏á‡πÄ‡∏ß‡∏•‡∏≤</span>
                      <span className="font-semibold text-blue-600">
                        {mockJobs.filter(job => job.type === 'part-time').length}
                      </span>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-gray-600">‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏à‡πâ‡∏≤‡∏á</span>
                      <span className="font-semibold text-orange-600">
                        {mockJobs.filter(job => job.type === 'contract').length}
                      </span>
                    </div>
                  </div>
                </CardBody>
              </Card>

              {/* Job Alert */}
              <Card className="bg-gradient-to-br from-green-50 to-blue-50 border-green-200">
                <CardBody className="p-6 text-center">
                  <div className="text-3xl mb-3">üîî</div>
                  <h3 className="font-semibold text-gray-900 mb-2">
                    ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà
                  </h3>
                  <p className="text-gray-600 text-sm mb-4">
                    ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô LINE
                  </p>
                  <Button variant="line" size="sm" className="w-full">
                    ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
                  </Button>
                </CardBody>
              </Card>

              {/* Tips */}
              <Card>
                <CardBody className="p-6">
                  <h3 className="font-semibold text-gray-900 mb-4">üí° ‡∏ó‡∏¥‡∏õ‡∏Å‡∏≤‡∏£‡∏´‡∏≤‡∏á‡∏≤‡∏ô</h3>
                  <div className="space-y-3 text-sm text-gray-600">
                    <div className="flex items-start space-x-2">
                      <span>‚úì</span>
                      <span>‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô</span>
                    </div>
                    <div className="flex items-start space-x-2">
                      <span>‚úì</span>
                      <span>‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÄ‡∏£‡∏ã‡∏π‡πÄ‡∏°‡πà‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô</span>
                    </div>
                    <div className="flex items-start space-x-2">
                      <span>‚úì</span>
                      <span>‡∏≠‡πà‡∏≤‡∏ô‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏á‡∏≤‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏™‡∏°‡∏±‡∏Ñ‡∏£</span>
                    </div>
                    <div className="flex items-start space-x-2">
                      <span>‚úì</span>
                      <span>‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÄ‡∏£‡πá‡∏ß ‡πÜ ‡∏Å‡πà‡∏≠‡∏ô‡∏õ‡∏¥‡∏î‡∏£‡∏±‡∏ö</span>
                    </div>
                  </div>
                </CardBody>
              </Card>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}