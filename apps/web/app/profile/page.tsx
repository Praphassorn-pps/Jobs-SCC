'use client'

import { useState, useEffect } from 'react'
import { Button } from '../../components/button'
import { Card } from '../../components/card'
import Link from 'next/link'

interface UserProfile {
  id: string
  displayName: string
  firstName: string
  lastName: string
  email: string
  phone: string
  dateOfBirth: string
  education: string
  experience: string
  skills: string[]
  expectedSalary: string
  profileImage: string
  joinDate: string
  applicationCount: number
  viewCount: number
}

export default function ProfilePage() {
  const [isEditing, setIsEditing] = useState(false)
  const [showSettings, setShowSettings] = useState(false)

  const [settings, setSettings] = useState({
    language: 'th',
    notifyEmail: true,
    notifyLine: true,
    notifySms: false,
    pdpaReminders: true
  })

  useEffect(() => {
    try {
      const raw = localStorage.getItem('userSettings')
      if (raw) setSettings(JSON.parse(raw))
    } catch (e) {
      // ignore
    }
  }, [])

  const saveSettings = () => {
    try {
      localStorage.setItem('userSettings', JSON.stringify(settings))
      // feedback could be added (toast)
      setShowSettings(false)
    } catch (e) {
      // ignore
    }
  }
  
  // Mock user profile data
  const [profile] = useState<UserProfile>({
    id: 'user-123',
    displayName: '‡∏ô‡∏≤‡∏¢ ‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ',
    firstName: '‡∏™‡∏°‡∏ä‡∏≤‡∏¢',
    lastName: '‡πÉ‡∏à‡∏î‡∏µ',
    email: 'somchai.jaidee@email.com',
    phone: '081-234-5678',
    dateOfBirth: '1995-05-15',
    education: '‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡∏ï‡∏£‡∏µ',
    experience: '3-5 ‡∏õ‡∏µ',
    skills: ['JavaScript', 'React', 'Node.js', 'SQL', 'Git'],
    expectedSalary: '35000',
    profileImage: 'https://via.placeholder.com/120x120/06C755/ffffff?text=LINE',
    joinDate: '2024-01-15',
    applicationCount: 5,
    viewCount: 23
  })

  const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleDateString('th-TH', {
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    })
  }

  const calculateAge = (birthDate: string) => {
    const today = new Date()
    const birth = new Date(birthDate)
    let age = today.getFullYear() - birth.getFullYear()
    const monthDiff = today.getMonth() - birth.getMonth()
    
    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birth.getDate())) {
      age--
    }
    
    return age
  }

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <div className="bg-white shadow-sm border-b">
        <div className="max-w-4xl mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <h1 className="text-xl font-semibold text-gray-900">‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô</h1>
            <div className="flex space-x-3">
              <Link href="/jobs">
                <Button
                  className="px-4 py-2 text-gray-600 bg-gray-100 hover:bg-gray-200"
                  onClick={() => {
                    try { localStorage.setItem('isLoggedIn', 'true') } catch (e) {}
                  }}
                >
                  ‡∏î‡∏π‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏á‡∏≤‡∏ô
                </Button>
              </Link>
              <Button 
                onClick={() => setIsEditing(!isEditing)}
                className="px-4 py-2 bg-green-500 hover:bg-green-600 text-white"
              >
                {isEditing ? '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å' : '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå'}
              </Button>
            </div>
          </div>
        </div>
      </div>

      <div className="max-w-4xl mx-auto px-4 py-8">
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
          {/* Left Sidebar - Profile Summary */}
          <div className="lg:col-span-1">
            <Card className="p-6">
              <div className="text-center">
                <img
                  src={profile.profileImage}
                  alt="Profile"
                  className="w-24 h-24 rounded-full mx-auto mb-4"
                />
                <h2 className="text-xl font-semibold text-gray-900">{profile.displayName}</h2>
                <p className="text-gray-600">{profile.firstName} {profile.lastName}</p>
                <p className="text-sm text-gray-500 mt-2">
                  ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠ {formatDate(profile.joinDate)}
                </p>
              </div>

              <div className="mt-6 space-y-3">
                <div className="flex items-center justify-between text-sm">
                  <span className="text-gray-600">‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á</span>
                  <span className="font-medium text-green-600">{profile.applicationCount} ‡∏â‡∏ö‡∏±‡∏ö</span>
                </div>
                <div className="flex items-center justify-between text-sm">
                  <span className="text-gray-600">‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ä‡∏°‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå</span>
                  <span className="font-medium">{profile.viewCount} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á</span>
                </div>
              </div>

              <div className="mt-6">
                <Link href="/applications">
                  <Button className="w-full px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white">
                    ‡∏î‡∏π‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£
                  </Button>
                </Link>
              </div>
            </Card>

            {/* Quick Actions */}
            <Card className="p-6 mt-6">
              <h3 className="font-semibold text-gray-900 mb-4">‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏î‡πà‡∏ß‡∏ô</h3>
              <div className="space-y-3">
                <Link href="/jobs" className="block">
                  <button
                    onClick={() => { try { localStorage.setItem('isLoggedIn', 'true') } catch (e) {} }}
                    className="w-full text-left px-3 py-2 text-sm text-gray-700 hover:bg-gray-50 rounded-lg"
                  >
                    üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏á‡∏≤‡∏ô
                  </button>
                </Link>
                <Link href="/resume" className="block">
                  <button className="w-full text-left px-3 py-2 text-sm text-gray-700 hover:bg-gray-50 rounded-lg">
                    üìÑ ‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏£‡∏ã‡∏π‡πÄ‡∏°‡πà
                  </button>
                </Link>
                <Link href="/notifications" className="block">
                  <button className="w-full text-left px-3 py-2 text-sm text-gray-700 hover:bg-gray-50 rounded-lg">
                    üîî ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
                  </button>
                </Link>
                <div className="block">
                  <button
                    onClick={() => setShowSettings(true)}
                    className="w-full text-left px-3 py-2 text-sm text-gray-700 hover:bg-gray-50 rounded-lg"
                  >
                    ‚öôÔ∏è ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
                  </button>
                </div>
              </div>
            </Card>
          </div>

          {/* Right Content - Profile Details */}
          <div className="lg:col-span-2 space-y-6">
            {/* Personal Information */}
            <Card className="p-6">
              <div className="flex items-center justify-between mb-4">
                <h3 className="text-lg font-semibold text-gray-900">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß</h3>
                {isEditing && (
                  <Button className="text-sm px-3 py-1 bg-green-500 hover:bg-green-600 text-white">
                    ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
                  </Button>
                )}
              </div>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏£‡∏¥‡∏á</label>
                  {isEditing ? (
                    <input
                      type="text"
                      defaultValue={profile.firstName}
                      className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500"
                    />
                  ) : (
                    <p className="text-gray-900">{profile.firstName}</p>
                  )}
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</label>
                  {isEditing ? (
                    <input
                      type="text"
                      defaultValue={profile.lastName}
                      className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500"
                    />
                  ) : (
                    <p className="text-gray-900">{profile.lastName}</p>
                  )}
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">‡∏≠‡∏µ‡πÄ‡∏°‡∏•</label>
                  {isEditing ? (
                    <input
                      type="email"
                      defaultValue={profile.email}
                      className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500"
                    />
                  ) : (
                    <p className="text-gray-900">{profile.email}</p>
                  )}
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå</label>
                  {isEditing ? (
                    <input
                      type="tel"
                      defaultValue={profile.phone}
                      className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500"
                    />
                  ) : (
                    <p className="text-gray-900">{profile.phone}</p>
                  )}
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î</label>
                  <p className="text-gray-900">
                    {formatDate(profile.dateOfBirth)} (‡∏≠‡∏≤‡∏¢‡∏∏ {calculateAge(profile.dateOfBirth)} ‡∏õ‡∏µ)
                  </p>
                </div>
              </div>
            </Card>

            {showSettings && (
              <Card className="p-6">
                <div className="flex items-center justify-between mb-4">
                  <h3 className="text-lg font-semibold text-gray-900">‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤</h3>
                  <div className="flex items-center space-x-2">
                    <Button variant="outline" onClick={() => setShowSettings(false)}>‡∏õ‡∏¥‡∏î</Button>
                    <Button onClick={saveSettings}>‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å</Button>
                  </div>
                </div>

                <div className="space-y-4">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-1">‡∏†‡∏≤‡∏©‡∏≤</label>
                    <select
                      value={settings.language}
                      onChange={(e) => setSettings(prev => ({ ...prev, language: e.target.value }))}
                      className="w-48 px-3 py-2 border border-gray-300 rounded-lg"
                    >
                      <option value="th">‡πÑ‡∏ó‡∏¢</option>
                      <option value="en">English</option>
                    </select>
                  </div>

                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-1">‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô</label>
                    <div className="space-y-2">
                      <label className="flex items-center space-x-2">
                        <input type="checkbox" checked={settings.notifyEmail} onChange={(e) => setSettings(prev => ({ ...prev, notifyEmail: e.target.checked }))} />
                        <span className="text-sm text-gray-700">‡∏≠‡∏µ‡πÄ‡∏°‡∏•</span>
                      </label>
                      <label className="flex items-center space-x-2">
                        <input type="checkbox" checked={settings.notifyLine} onChange={(e) => setSettings(prev => ({ ...prev, notifyLine: e.target.checked }))} />
                        <span className="text-sm text-gray-700">LINE</span>
                      </label>
                      <label className="flex items-center space-x-2">
                        <input type="checkbox" checked={settings.notifySms} onChange={(e) => setSettings(prev => ({ ...prev, notifySms: e.target.checked }))} />
                        <span className="text-sm text-gray-700">SMS</span>
                      </label>
                    </div>
                  </div>

                  <div>
                    <label className="flex items-center space-x-2">
                      <input type="checkbox" checked={settings.pdpaReminders} onChange={(e) => setSettings(prev => ({ ...prev, pdpaReminders: e.target.checked }))} />
                      <span className="text-sm text-gray-700">‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö PDPA / ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£</span>
                    </label>
                  </div>
                </div>
              </Card>
            )}

            {/* Education & Experience */}
            <Card className="p-6">
              <h3 className="text-lg font-semibold text-gray-900 mb-4">‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå</h3>
              
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤</label>
                  {isEditing ? (
                    <select
                      defaultValue={profile.education}
                      className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500"
                    >
                      <option value="‡∏°‡∏±‡∏ò‡∏¢‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤">‡∏°‡∏±‡∏ò‡∏¢‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤</option>
                      <option value="‡∏õ‡∏ß‡∏ä./‡∏õ‡∏ß‡∏™.">‡∏õ‡∏ß‡∏ä./‡∏õ‡∏ß‡∏™.</option>
                      <option value="‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡∏ï‡∏£‡∏µ">‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡∏ï‡∏£‡∏µ</option>
                      <option value="‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡πÇ‡∏ó">‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡πÇ‡∏ó</option>
                      <option value="‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡πÄ‡∏≠‡∏Å">‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡πÄ‡∏≠‡∏Å</option>
                    </select>
                  ) : (
                    <p className="text-gray-900">{profile.education}</p>
                  )}
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå</label>
                  {isEditing ? (
                    <select
                      defaultValue={profile.experience}
                      className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500"
                    >
                      <option value="‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå</option>
                      <option value="0-1 ‡∏õ‡∏µ">0-1 ‡∏õ‡∏µ</option>
                      <option value="1-3 ‡∏õ‡∏µ">1-3 ‡∏õ‡∏µ</option>
                      <option value="3-5 ‡∏õ‡∏µ">3-5 ‡∏õ‡∏µ</option>
                      <option value="5-10 ‡∏õ‡∏µ">5-10 ‡∏õ‡∏µ</option>
                      <option value="‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 10 ‡∏õ‡∏µ">‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 10 ‡∏õ‡∏µ</option>
                    </select>
                  ) : (
                    <p className="text-gray-900">{profile.experience}</p>
                  )}
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏≤‡∏î‡∏´‡∏ß‡∏±‡∏á</label>
                  {isEditing ? (
                    <input
                      type="number"
                      defaultValue={profile.expectedSalary}
                      className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500"
                    />
                  ) : (
                    <p className="text-gray-900">{parseInt(profile.expectedSalary).toLocaleString()} ‡∏ö‡∏≤‡∏ó</p>
                  )}
                </div>
              </div>
            </Card>

            {/* Skills */}
            <Card className="p-6">
              <h3 className="text-lg font-semibold text-gray-900 mb-4">‡∏ó‡∏±‡∏Å‡∏©‡∏∞</h3>
              
              <div className="flex flex-wrap gap-2">
                {profile.skills.map((skill, index) => (
                  <span
                    key={index}
                    className="px-3 py-1 bg-green-100 text-green-800 rounded-full text-sm font-medium"
                  >
                    {skill}
                  </span>
                ))}
              </div>
              
              {isEditing && (
                <div className="mt-4">
                  <Button className="text-sm px-3 py-1 text-green-600 border border-green-600 hover:bg-green-50">
                    + ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏±‡∏Å‡∏©‡∏∞
                  </Button>
                </div>
              )}
            </Card>

            {/* Recent Applications */}
            <Card className="p-6">
              <h3 className="text-lg font-semibold text-gray-900 mb-4">‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</h3>
              
              <div className="space-y-3">
                <div className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                  <div>
                    <h4 className="font-medium text-gray-900">Frontend Developer</h4>
                    <p className="text-sm text-gray-600">‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ABC ‡∏à‡∏≥‡∏Å‡∏±‡∏î ‚Ä¢ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÄ‡∏°‡∏∑‡πà‡∏≠ 2 ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß</p>
                  </div>
                  <span className="px-3 py-1 bg-yellow-100 text-yellow-800 text-sm rounded-full">
                    ‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤
                  </span>
                </div>
                
                <div className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                  <div>
                    <h4 className="font-medium text-gray-900">Full Stack Developer</h4>
                    <p className="text-sm text-gray-600">‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó XYZ ‡∏à‡∏≥‡∏Å‡∏±‡∏î ‚Ä¢ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÄ‡∏°‡∏∑‡πà‡∏≠ 1 ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß</p>
                  </div>
                  <span className="px-3 py-1 bg-blue-100 text-blue-800 text-sm rounded-full">
                    ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠
                  </span>
                </div>
                
                <div className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                  <div>
                    <h4 className="font-medium text-gray-900">React Developer</h4>
                    <p className="text-sm text-gray-600">‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó DEF ‡∏à‡∏≥‡∏Å‡∏±‡∏î ‚Ä¢ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÄ‡∏°‡∏∑‡πà‡∏≠ 2 ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß</p>
                  </div>
                  <span className="px-3 py-1 bg-green-100 text-green-800 text-sm rounded-full">
                    ‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏±‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
                  </span>
                </div>
              </div>
              
              <div className="mt-4">
                <Link href="/applications">
                  <Button className="text-sm text-green-600 hover:text-green-700">
                    ‡∏î‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‚Üí
                  </Button>
                </Link>
              </div>
            </Card>
          </div>
        </div>
      </div>
    </div>
  )
}